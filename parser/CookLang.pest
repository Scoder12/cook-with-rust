// entrypoint
recipe = ${ SOI ~ recipe_main ~ EOI }
recipe_main = ${ optional_line ~ (NEWLINE ~ optional_line)* }

// special rules
WHITESPACE = _{ " " | "\t" }
text = _{ !"\n" ~ !WHITESPACE ~ ANY }
COMMENT = _{ "//" ~ text* }

optional_line = _{ line | WHITESPACE* }
line = ${ ( metadata_item | step ) ~ WHITESPACE* }

metadata_item = !{ WHITESPACE* ~ ">>" ~ metadata_key ~ ":" ~ metadata_value }
metadata_key = @{ ASCII_ALPHANUMERIC+ }
metadata_value = @{ inline_name }

step = ${ step_part+ }
step_part = ${ ingredient | cookware | timer | step_content_wrapper }
step_content_wrapper = _{ WHITESPACE* ~ step_content ~ WHITESPACE* }
step_content = @{ inline_name }

inline_name = @{ (WHITESPACE* ~ inline_name_content)+ }
inline_name_content = @{ (!"{" ~ !"@" ~ !"#" ~ !"~" ~ text)+ }

ingredient = { "@" ~ (long_ingredient | short_ingredient) }
short_ingredient = @{ ASCII_ALPHANUMERIC+ } // 1 word
long_ingredient = { inline_name ~ "{" ~ quantity ~ "}" }
ingredient_name = @{ inline_name }
quantity = @{ (!"}" ~ text)* }

// very similar to ingredient
cookware = { "#" ~ (long_cookware | short_cookware) }
long_cookware = { inline_name ~ "{}" }
// TODO: can cookware have a quantity? https://github.com/cooklang/spec/issues/18
short_cookware = @{ ASCII_ALPHANUMERIC+ }

timer = { "~{" ~ timer_duration ~ "%" ~ timer_unit ~ "}"  }
// TODO: Update based on status of https://github.com/cooklang/spec/issues/19
timer_duration = { ASCII_DIGIT+ }
timer_unit = { "seconds" | "minutes" }
